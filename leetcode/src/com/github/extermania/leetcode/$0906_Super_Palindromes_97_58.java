package com.github.extermania.leetcode;

public class $0906_Super_Palindromes_97_58 {
	static class Solution {
	    static java.math.BigDecimal[] arr = new java.math.BigDecimal[]{
	new java.math.BigDecimal("1"),
	new java.math.BigDecimal("4"),
	new java.math.BigDecimal("9"),
	new java.math.BigDecimal("121"),
	new java.math.BigDecimal("484"),
	//new java.math.BigDecimal("676"),
	new java.math.BigDecimal("10201"),
	new java.math.BigDecimal("12321"),
	new java.math.BigDecimal("14641"),
	new java.math.BigDecimal("40804"),
	new java.math.BigDecimal("44944"),
	//new java.math.BigDecimal("69696"),
	//new java.math.BigDecimal("94249"),
	//new java.math.BigDecimal("698896"),
	new java.math.BigDecimal("1002001"),
	new java.math.BigDecimal("1234321"),
	new java.math.BigDecimal("4008004"),
	//new java.math.BigDecimal("5221225"),
	//new java.math.BigDecimal("6948496"),
	new java.math.BigDecimal("100020001"),
	new java.math.BigDecimal("102030201"),
	new java.math.BigDecimal("104060401"),
	new java.math.BigDecimal("121242121"),
	new java.math.BigDecimal("123454321"),
	new java.math.BigDecimal("125686521"),
	new java.math.BigDecimal("400080004"),
	new java.math.BigDecimal("404090404"),
	//new java.math.BigDecimal("522808225"),
	//new java.math.BigDecimal("617323716"),
	//new java.math.BigDecimal("942060249"),
	new java.math.BigDecimal("10000200001"),
	new java.math.BigDecimal("10221412201"),
	new java.math.BigDecimal("12102420121"),
	new java.math.BigDecimal("12345654321"),
	new java.math.BigDecimal("40000800004"),
	//new java.math.BigDecimal("637832238736"),
	new java.math.BigDecimal("1000002000001"),
	new java.math.BigDecimal("1002003002001"),
	new java.math.BigDecimal("1004006004001"),
	new java.math.BigDecimal("1020304030201"),
	new java.math.BigDecimal("1022325232201"),
	new java.math.BigDecimal("1024348434201"),
	//new java.math.BigDecimal("1086078706801"),
	new java.math.BigDecimal("1210024200121"),
	new java.math.BigDecimal("1212225222121"),
	new java.math.BigDecimal("1214428244121"),
	//new java.math.BigDecimal("1230127210321"),
	new java.math.BigDecimal("1232346432321"),
	new java.math.BigDecimal("1234567654321"),
	//new java.math.BigDecimal("1615108015161"),
	new java.math.BigDecimal("4000008000004"),
	new java.math.BigDecimal("4004009004004"),
	//new java.math.BigDecimal("4051154511504"),
	//new java.math.BigDecimal("5265533355625"),
	//new java.math.BigDecimal("9420645460249"),
	new java.math.BigDecimal("100000020000001"),
	new java.math.BigDecimal("100220141022001"),
	new java.math.BigDecimal("102012040210201"),
	new java.math.BigDecimal("102234363432201"),
	new java.math.BigDecimal("121000242000121"),
	new java.math.BigDecimal("121242363242121"),
	new java.math.BigDecimal("123212464212321"),
	new java.math.BigDecimal("123456787654321"),
	//new java.math.BigDecimal("123862676268321"),
	//new java.math.BigDecimal("144678292876441"),
	//new java.math.BigDecimal("165551171155561"),
	new java.math.BigDecimal("400000080000004"),
	//new java.math.BigDecimal("900075181570009"),
	//new java.math.BigDecimal("4099923883299904"),
	new java.math.BigDecimal("10000000200000001"),
	new java.math.BigDecimal("10002000300020001"),
	new java.math.BigDecimal("10004000600040001"),
	new java.math.BigDecimal("10020210401202001"),
	new java.math.BigDecimal("10022212521222001"),
	new java.math.BigDecimal("10024214841242001"),
	new java.math.BigDecimal("10201020402010201"),
	new java.math.BigDecimal("10203040504030201"),
	new java.math.BigDecimal("10205060806050201"),
	new java.math.BigDecimal("10221432623412201"),
	new java.math.BigDecimal("10223454745432201"),
	new java.math.BigDecimal("12100002420000121"),
	new java.math.BigDecimal("12102202520220121"),
	new java.math.BigDecimal("12104402820440121"),
	//new java.math.BigDecimal("12120030703002121"),
	new java.math.BigDecimal("12122232623222121"),
	new java.math.BigDecimal("12124434743442121"),
	new java.math.BigDecimal("12321024642012321"),
	new java.math.BigDecimal("12323244744232321"),
	//new java.math.BigDecimal("12341234943214321"),
	new java.math.BigDecimal("12343456865434321"),
	new java.math.BigDecimal("12345678987654321"),
	new java.math.BigDecimal("40000000800000004"),
	new java.math.BigDecimal("40004000900040004"),
	//new java.math.BigDecimal("94206450305460249"),
	new java.math.BigDecimal("1000000002000000001"),
	new java.math.BigDecimal("1000220014100220001"),
	new java.math.BigDecimal("1002003004003002001"),
	new java.math.BigDecimal("1002223236323222001"),
	new java.math.BigDecimal("1020100204020010201"),
	new java.math.BigDecimal("1020322416142230201"),
	    };
	    public int superpalindromesInRange(String L, String R) {
	        java.math.BigDecimal bl = new java.math.BigDecimal(L);
	        java.math.BigDecimal br = new java.math.BigDecimal(R);
	        
	        int cnt = 0;
	        for(java.math.BigDecimal bd:arr){
	            if(bd.compareTo(bl)>=0 && bd.compareTo(br)<=0){
	                cnt++;
	            }
	        }
	        
	        return cnt;
	    }
	}
}
